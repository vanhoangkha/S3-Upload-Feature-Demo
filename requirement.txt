
ROLE
Bạn là Senior AWS Full-Stack Architect + DevOps. Hãy sinh FULL CODE PRODUCTION-READY cho một hệ thống Document Management System (DMS) kiểu Google Drive, 3 vai trò (Admin/Vendor/User), 100% serverless. Tất cả tài nguyên AWS phải ở **us-east-1**.

GOALS
- Quản lý tài liệu: upload/download/list/search/versioning, soft-delete/restore.
- RBAC chặt chẽ: Admin (full), Vendor (phạm vi vendor), User (phạm vi chính mình).
- Triển khai hạ tầng bằng Terraform, CI/CD hoàn chỉnh, bảo mật, audit, quan sát.
- Xuất một **monorepo** build & deploy được ngay.

HARD CONSTRAINTS
- Region bắt buộc: **us-east-1** (Cognito, API Gateway, Lambda, DynamoDB, S3, KMS, ECR, CodePipeline, CloudFront origin S3 ở us-east-1).
- Serverless thuần: API Gateway HTTP API + Lambda (Node.js 20, TypeScript, image-based/ECR).
- Frontend: React + **Cloudscape Design System**.
- AuthN/Z: Amazon Cognito User Pool + Hosted UI (OAuth2 Code + PKCE), **groups**: Admin, Vendor, User. Thuộc tính user: `custom:vendor_id`.
- Không cấp IAM rộng; mọi policy phải least-privilege & scoped theo tài nguyên.

==== OUTPUT REPO (MONOREPO) ====
Tạo repo với cấu trúc và nội dung sau:
- `infra/`  : Terraform modules + envs (dev/stg/prod), remote state S3 + DDB lock (đều us-east-1).
- `api/`    : Lambda (TypeScript), Dockerfile (Node 20), build scripts, tests, OpenAPI validators.
- `web/`    : React + **Cloudscape** (AppLayout, SideNavigation, Table, Flashbar, Modal, Form), router, RBAC guards, upload qua presigned URL.
- `docs/`   : README (runbook + deploy guide), OpenAPI spec, kiến trúc (diagrams), ADRs ngắn.
- `Makefile`/task runner: target build/test/deploy cho `infra`, `api`, `web`.

==== KIẾN TRÚC ====
- Identity: Cognito User Pool (us-east-1) + App Client (Hosted UI). Pre Token Generation trigger: inject `roles` (từ groups) & `vendor_id` vào ID token. Token TTL: ID 10m, Access 60m, Refresh 30d. Đổi role → GlobalSignOut hoặc rely TTL ngắn.
- API: API Gateway **HTTP API** + Cognito JWT Authorizer (verify iss/aud/exp).
- Compute: AWS Lambda (Node.js 20/TS, container images từ ECR us-east-1).
- Storage: 
  - **S3** bucket `dms-docs` (us-east-1): Versioning ON, SSE-KMS (CMK us-east-1), Block Public Access, bucket policy deny non-TLS.
  - **DynamoDB** (us-east-1): 
    - `documents` (metadata): 
      - `pk = TENANT#{vendor_id}`
      - `sk = USER#{owner_user_id}#DOC#{document_id}`
      - Attrs: `name,mime,size,checksum,s3_key,version,tags[],created_at,updated_at,deleted_at?,owner_user_id,vendor_id`
      - GSI1: `owner_user_id` (list theo user)
      - GSI2: `vendor_id` (PK), `updated_at` (SK) (list theo vendor, sort by time)
    - `role_audits` (audit phân quyền & delete/restore).
- S3 key strategy: `tenant/{vendor_id}/user/{owner_user_id}/{document_id}/v{version}/{filename}`.
- Observability & Audit: 
  - CloudTrail mgmt events (all regions), optional data events (S3/Lambda).
  - API GW access logs (JSON), Lambda structured logs (JSON).
  - DDB Streams → Kinesis Firehose → S3 (partitioned) → Glue/Athena (truy vấn).
  - Optional: OpenSearch + Dashboards (near-real-time).

==== BACKEND (LAMBDA CRUD + HỖ TRỢ) ====
Viết các Lambda sau (mỗi handler độc lập, dùng chung `lib/`):
- `createDocument`  (POST /files): tạo metadata idempotent theo `checksum`; trả `{documentId, version, s3Key}`.
- `getDocument`     (GET /files/{id}): trả metadata; 404 nếu không thấy hoặc `deleted_at` (trừ khi `includeDeleted=true`).
- `listDocuments`   (GET /files?scope=me|vendor&...): phân trang, filter `q/tags/updated_at`.
- `updateDocument`  (PATCH /files/{id}): rename, chỉnh `tags[]` (không đổi owner/vendor).
- `deleteDocument`  (DELETE /files/{id}): soft delete (set `deleted_at`), idempotent, ghi audit.
- `restoreDocument` (POST /files/{id}/restore): gỡ `deleted_at`.
- `listVersions`    (GET /files/{id}/versions): liệt kê version (S3 Versioning + metadata).
- `presignUpload`   (POST /files/presign/upload): trả presigned **PUT** (900s, SSE-KMS CMK us-east-1).
- `presignDownload` (POST /files/presign/download): trả presigned **GET** (900s) sau kiểm quyền.
- `whoAmI`          (GET /me): trả `{ userId, roles[], vendorId }`.

YÊU CẦU CHUNG CHO LAMBDA
- Validate JWT (iss/aud/exp) & Authorization header—thiếu → 401.
- RBAC middleware `assertAccess(claims, {vendorId, userId?})`:
  - Admin → bypass.
  - Vendor → yêu cầu `jwt.vendor_id == vendorId`.
  - User   → yêu cầu `jwt.vendor_id == vendorId && jwt.sub == userId`.
- Validation input bằng Zod; lỗi 400 nếu fail; trả error JSON thống nhất: `{ error: { code, message, details? } }`.
- Idempotency: header `Idempotency-Key` cho POST/PATCH/DELETE; `createDocument` idempotent theo `checksum` + owner.
- Logging JSON: `{ ts, level, requestId, actor:{userId,vendorId,roles}, action, resource:{type,id}, result, latency_ms }`.
- Env vars: `AWS_REGION=us-east-1`, `DOC_BUCKET`, `TABLE_NAME`, `AUDIT_TABLE`, `KMS_KEY_ID`, `USER_POOL_ID`, `USER_POOL_CLIENT_ID`, `LOG_LEVEL`.

==== FRONTEND (REACT + CLOUDSCAPE) ====
- Cloudscape App shell: `AppLayout` + `SideNavigation`.
  - Nav items điều kiện theo role: **My Drive** (/drive), **Vendor** (/vendor), **Admin** (/admin).
- Auth: Cognito Hosted UI (Code + PKCE). Lưu token an toàn (memory/secure cookies). Tự refresh/đăng xuất khi hết hạn. Lấy `roles`, `vendor_id` từ ID token (đã inject).
- Pages:
  - `/drive` (User): bảng tài liệu của chính user; upload qua presigned PUT; rename, tag, delete/restore.
  - `/vendor` (Vendor/Admin): bảng tài liệu toàn vendor; filter, phân trang.
  - `/admin` (Admin): quản lý users/roles (invite/update role/global signout), audit viewer (filter time/actor/action).
- UX:
  - Upload component hiển thị tiến độ, retry; Drag&Drop optional.
  - Table: sorting, filtering (name, tags, updated_at), pagination.
  - Flashbar cho trạng thái thành công/lỗi; Modal confirm xoá/restore.
- State/data: React Query; interceptor thêm `Authorization: Bearer <idToken>`.

==== IAC (TERRAFORM — us-east-1) ====
- Modules: `cognito/`, `apigw/`, `lambda/`, `ddb/`, `s3/`, `kms/`, `cloudfront/`, `codepipeline/`, `waf/`.
- Envs: `envs/dev|stg|prod` với `tfvars` mẫu. Remote state S3 + DDB lock (us-east-1).
- Cognito:
  - User Pool + App Client (Code + PKCE), Domain, Groups: Admin/Vendor/User, schema attr `vendor_id` (mutable).
  - Pre Token Generation trigger Lambda.
- API Gateway HTTP API + JWT Authorizer (aud = app client id, iss = pool issuer).
- Lambda (image-based) + ECR repo `dms-api` (us-east-1).
- S3 `dms-docs` (Versioning, SSE-KMS, Block Public Access, deny non-TLS).
- DynamoDB 2 bảng + GSI như phần kiến trúc.
- CloudFront (global) → origin S3 static website us-east-1; WAF optional.
- Outputs: `user_pool_id`, `user_pool_client_id`, `cognito_issuer`, `api_base_url`, `doc_bucket`, `ddb_tables`, `cloudfront_domain`.


==== API & TESTS ====
- Sinh `OpenAPI.yaml` cho endpoints:
  - POST /files/presign/upload
  - POST /files/presign/download
  - GET  /files
  - POST /files
  - GET  /files/{id}
  - PATCH /files/{id}
  - DELETE /files/{id}
  - POST /files/{id}/restore
  - GET  /files/{id}/versions
  - GET  /me
  - GET  /admin/users
  - POST /admin/users
  - POST /admin/users/{id}/roles
  - POST /admin/users/{id}/signout
  - GET  /admin/audits
- Unit tests: RBAC (Admin/Vendor/User), validation schema, error mapping.
- Integration tests: presign PUT/GET (900s expiry, đúng prefix), list/search, soft-delete/restore.
- Load: p95 < 400ms cho presign ở 50 rps.

==== ACCEPTANCE CRITERIA (DEFINITION OF DONE) ====
- RBAC: 
  - User (vendor X) không truy cập tài nguyên người khác (kể cả cùng vendor).
  - Vendor thấy toàn vendor X, không thấy vendor Y.
  - Admin thấy toàn hệ thống.
- Presign: URL hết hạn ≤ 15 phút, key theo pattern tenant/vendor/user/doc/version/filename.
- Audit: thao tác role change & delete/restore có record, truy vấn được bằng Athena.
- Security: S3 BPA ON, SSE-KMS; API bảo vệ bởi JWT + WAF; IAM least-privilege; không có secret hardcode.
- Deploy: `infra apply` → `api build+deploy` → `web deploy` hoạt động ngay (us-east-1).

==== NAMING & CONVENTIONS ====
- Prefix tài nguyên: `dms-<env>-<component>`.
- Code style: ESLint + Prettier; commit hooks (lint/test).
- Error payload thống nhất; logs JSON có `requestId` & `x-request-id` (nếu có).

==== DELIVERABLES BẮT BUỘC ====
1) Monorepo đầy đủ (infra/api/web/docs) với scripts build/test/deploy.
2) Terraform modules + envs tạo tài nguyên ở **us-east-1** + outputs đầy đủ.
3) Backend Lambda (TS) cho tất cả endpoints, kèm middleware RBAC, validators, logger.
4) Frontend React + Cloudscape (Drive/Vendor/Admin/Audit) + RBAC guard + upload presigned.
5) OpenAPI spec; README (deploy/runbook); sơ đồ kiến trúc.
6) Bộ test unit/integration; pipeline config (CodePipeline/CodeBuild).

IMPORTANT
- Không sinh tài nguyên ngoài **us-east-1**.
- Không cấp quyền IAM chung chung (`*`); scope theo ARN cụ thể (S3 bucket & prefix, DDB tables, KMS CMK).
- Không sử dụng dịch vụ ngoài AWS (trừ khi đã nêu); không chèn secrets vào code.

Hãy sinh toàn bộ mã nguồn & hạ tầng đúng theo đặc tả trên.Hoàn thành project có UI đẹp và có thể vào sử dụng
```
