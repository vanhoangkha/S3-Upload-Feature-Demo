#!/bin/bash

echo "üé≠ Quick Role Testing Setup"
echo "=========================="

# Check if web app is running
if curl -s http://localhost:3000 > /dev/null; then
    echo "‚úÖ Web app is running on http://localhost:3000"
else
    echo "‚ùå Web app not running. Starting..."
    cd web && npm start &
    sleep 10
fi

echo ""
echo "üîê Role Testing Instructions:"
echo ""
echo "1Ô∏è‚É£ ADMIN ROLE TEST:"
echo "   ‚Ä¢ Open: http://localhost:3000"
echo "   ‚Ä¢ Login as admin user"
echo "   ‚Ä¢ Check navigation shows all sections:"
echo "     - Core Features (3 items)"
echo "     - User Management (5 items)" 
echo "     - Administration (2 items)"
echo "     - Development (1 item)"
echo "   ‚Ä¢ Test Admin Management page"
echo "   ‚Ä¢ Test API Testing page with admin endpoints"
echo ""

echo "2Ô∏è‚É£ VENDOR ROLE TEST:"
echo "   ‚Ä¢ Login as vendor user"
echo "   ‚Ä¢ Check navigation shows:"
echo "     - Core Features (3 items)"
echo "     - User Management (5 items)"
echo "     - Vendor Tools (2 items)"
echo "     - Development (1 item)"
echo "   ‚Ä¢ Test Vendor Operations page"
echo "   ‚Ä¢ Verify no Admin sections visible"
echo ""

echo "3Ô∏è‚É£ USER ROLE TEST:"
echo "   ‚Ä¢ Login as regular user"
echo "   ‚Ä¢ Check navigation shows only:"
echo "     - Core Features (3 items)"
echo "     - User Management (5 items)"
echo "     - Development (1 item)"
echo "   ‚Ä¢ Test User Documents page"
echo "   ‚Ä¢ Verify no Admin/Vendor sections"
echo ""

echo "üß™ Test Checklist:"
echo "‚ñ° Navigation adapts to user role"
echo "‚ñ° Pages show appropriate content"
echo "‚ñ° API calls work for each role"
echo "‚ñ° Access control prevents unauthorized access"
echo "‚ñ° Error handling for forbidden actions"
echo ""

echo "üöÄ Start testing at: http://localhost:3000"
