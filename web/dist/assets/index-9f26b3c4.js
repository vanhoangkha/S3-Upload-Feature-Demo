import{a as E,P as m,c as C,D as p,b as w,d as P,e as v,A,f,g as T,h,i as u,j as d,k as l,l as g,m as W,n as V,o as O,p as R,q as D,r as N,s as K,t as I,S as _,u as x,v as z,w as L,x as J,y,z as B,B as M,C as j,E as G,F as H,G as X,H as $}from"./index-2ec33fd3.js";import{W as We,K as Ve,O as Oe,N as Ne,R as Ke,X as _e,U as xe,Q as ze,M as Le,J as Je,V as Be,L as je,T as Ge,I as He}from"./index-2ec33fd3.js";function q(e){E([!!e,!!(e!=null&&e.challenge),!!(e!=null&&e.user),!!(e!=null&&e.rp),!!(e!=null&&e.pubKeyCredParams)].every(Boolean),m.InvalidPasskeyRegistrationOptions)}const Q=e=>C(v,P("SetUserMFAPreference"),w(),{...p,...e});async function Pe(e){var k;const{sms:t,totp:n,email:s}=e,r=(k=A.getConfig().Auth)==null?void 0:k.Cognito;f(r);const{userPoolEndpoint:o,userPoolId:a}=r,{tokens:i}=await T({forceRefresh:!1});h(i),await Q({endpointResolver:g({endpointOverride:o})})({region:u(a),userAgentValue:d(l.UpdateMFAPreference)},{AccessToken:i.accessToken.toString(),SMSMfaSettings:U(t),SoftwareTokenMfaSettings:U(n),EmailMfaSettings:U(s)})}function U(e){if(e==="DISABLED")return{Enabled:!1};if(e==="PREFERRED")return{Enabled:!0,PreferredMfa:!0};if(e==="ENABLED")return{Enabled:!0};if(e==="NOT_PREFERRED")return{Enabled:!0,PreferredMfa:!1}}async function ve(){var i;const e=(i=A.getConfig().Auth)==null?void 0:i.Cognito;f(e);const{userPoolEndpoint:t,userPoolId:n}=e,{tokens:s}=await T({forceRefresh:!1});h(s);const r=W({endpointResolver:g({endpointOverride:t})}),{PreferredMfaSetting:o,UserMFASettingList:a}=await r({region:u(n),userAgentValue:d(l.FetchMFAPreference)},{AccessToken:s.accessToken.toString()});return{preferred:V(o),enabled:O(a)}}async function Te(e){var c;const t=(c=A.getConfig().Auth)==null?void 0:c.Cognito;f(t);const{userPoolEndpoint:n,userPoolId:s}=t,{code:r,options:o}=e;R(!!r,D.EmptyVerifyTOTPSetupCode);const{tokens:a}=await T({forceRefresh:!1});h(a),await N({endpointResolver:g({endpointOverride:n})})({region:u(s),userAgentValue:d(l.VerifyTOTPSetup)},{AccessToken:a.accessToken.toString(),UserCode:r,FriendlyDeviceName:o==null?void 0:o.friendlyDeviceName})}const Y=e=>C(v,P("ChangePassword"),w(),{...p,...e});async function ke(e){var c;const t=(c=A.getConfig().Auth)==null?void 0:c.Cognito;f(t);const{userPoolEndpoint:n,userPoolId:s}=t,{oldPassword:r,newPassword:o}=e;R(!!r,D.EmptyUpdatePassword),R(!!o,D.EmptyUpdatePassword);const{tokens:a}=await T({forceRefresh:!1});h(a),await Y({endpointResolver:g({endpointOverride:n})})({region:u(s),userAgentValue:d(l.UpdatePassword)},{AccessToken:a.accessToken.toString(),PreviousPassword:r,ProposedPassword:o})}async function be(){var i,c;const e=(i=A.getConfig().Auth)==null?void 0:i.Cognito;f(e);const{userPoolEndpoint:t,userPoolId:n}=e,{tokens:s}=await T({forceRefresh:!1});h(s);const r=((c=s.idToken)==null?void 0:c.payload["cognito:username"])??"",o=K({endpointResolver:g({endpointOverride:t})}),{SecretCode:a}=await o({region:u(n),userAgentValue:d(l.SetUpTOTP)},{AccessToken:s.accessToken.toString()});if(!a)throw new I({name:_,message:"Failed to set up TOTP."});return x(a,JSON.stringify(r))}const Z=e=>C(v,P("UpdateUserAttributes"),w(),{...p,...e}),ee=async e=>{var S;const{userAttributes:t,options:n}=e,s=(S=A.getConfig().Auth)==null?void 0:S.Cognito,r=n==null?void 0:n.clientMetadata;f(s);const{userPoolEndpoint:o,userPoolId:a}=s,{tokens:i}=await T({forceRefresh:!1});h(i);const c=Z({endpointResolver:g({endpointOverride:o})}),{CodeDeliveryDetailsList:k}=await c({region:u(a),userAgentValue:d(l.UpdateUserAttributes)},{AccessToken:i.accessToken.toString(),ClientMetadata:r,UserAttributes:z(t)});return{...te(t),...se(k)}};function te(e){var n;const t={};return(n=Object.keys(e))==null||n.forEach(s=>{t[s]={isUpdated:!0,nextStep:{updateAttributeStep:"DONE"}}}),t}function se(e){const t={};return e==null||e.forEach(n=>{const{AttributeName:s,DeliveryMedium:r,Destination:o}=n;s&&(t[s]={isUpdated:!1,nextStep:{updateAttributeStep:"CONFIRM_ATTRIBUTE_WITH_CODE",codeDeliveryDetails:{attributeName:s,deliveryMedium:r,destination:o}}})}),t}const we=async e=>{const{userAttribute:{attributeKey:t,value:n},options:s}=e,r=await ee({userAttributes:{[t]:n},options:s});return Object.values(r)[0]},ne=e=>C(v,P("DeleteUserAttributes"),w(),{...p,...e});async function Se(e){var i;const t=(i=A.getConfig().Auth)==null?void 0:i.Cognito;f(t);const{userAttributeKeys:n}=e,{userPoolEndpoint:s,userPoolId:r}=t,{tokens:o}=await T({forceRefresh:!1});h(o),await ne({endpointResolver:g({endpointOverride:s})})({region:u(r),userAgentValue:d(l.DeleteUserAttributes)},{AccessToken:o.accessToken.toString(),UserAttributeNames:n})}const F=()=>async e=>{if(e.statusCode>=300){const t=await L(e);throw J(t),new I({name:t.name,message:t.message})}else return},oe=e=>C(v,P("DeleteUser"),F(),{...p,...e});async function ye(){var o;const e=(o=A.getConfig().Auth)==null?void 0:o.Cognito;f(e);const{userPoolEndpoint:t,userPoolId:n}=e,{tokens:s}=await T();h(s),await oe({endpointResolver:g({endpointOverride:t})})({region:u(n),userAgentValue:d(l.DeleteUser)},{AccessToken:s.accessToken.toString()}),await y.clearDeviceMetadata(),await B()}const re=e=>C(v,P("UpdateDeviceStatus"),w(),{...p,...e});async function Ue(){var a,i;const e=(a=A.getConfig().Auth)==null?void 0:a.Cognito;f(e);const{userPoolEndpoint:t,userPoolId:n}=e,{tokens:s}=await T();h(s);const r=await((i=y)==null?void 0:i.getDeviceMetadata());M(r),await re({endpointResolver:g({endpointOverride:t})})({region:u(n),userAgentValue:d(l.RememberDevice)},{AccessToken:s.accessToken.toString(),DeviceKey:r.deviceKey,DeviceRememberedStatus:"remembered"})}const ae=e=>C(v,P("ForgetDevice"),F(),{...p,...e});async function Re(e){var k;const{device:{id:t}={id:void 0}}=e??{},n=(k=A.getConfig().Auth)==null?void 0:k.Cognito;f(n);const{userPoolEndpoint:s,userPoolId:r}=n,{tokens:o}=await T();h(o);const a=await y.getDeviceMetadata(),i=a==null?void 0:a.deviceKey;t||M(a),await ae({endpointResolver:g({endpointOverride:s})})({region:u(r),userAgentValue:d(l.ForgetDevice)},{AccessToken:o.accessToken.toString(),DeviceKey:t??i}),(!t||t===i)&&await y.clearDeviceMetadata()}const ie=e=>C(v,P("ListDevices"),w(),{...p,...e}),ce=60;async function De(){var a;const e=(a=A.getConfig().Auth)==null?void 0:a.Cognito;f(e);const{userPoolEndpoint:t,userPoolId:n}=e,{tokens:s}=await T();h(s);const o=await ie({endpointResolver:g({endpointOverride:t})})({region:u(n),userAgentValue:d(l.FetchDevices)},{AccessToken:s.accessToken.toString(),Limit:ce});return ue(o.Devices??[])}const ue=async e=>e.map(({DeviceKey:t="",DeviceAttributes:n=[],DeviceCreateDate:s,DeviceLastModifiedDate:r,DeviceLastAuthenticatedDate:o})=>{let a;const i=n.reduce((k,{Name:S,Value:b})=>(S&&b&&(S==="device_name"&&(a=b),k[S]=b),k),{});return{id:t,name:a,attributes:i,createDate:s?new Date(s*1e3):void 0,lastModifiedDate:r?new Date(r*1e3):void 0,lastAuthenticatedDate:o?new Date(o*1e3):void 0}}),de=async e=>{try{const t=j();E(t,m.PasskeyNotSupported);const n=G(e),s=await navigator.credentials.create({publicKey:n});return H(s),X(s)}catch(t){throw $(t)}},le=e=>C(v,P("StartWebAuthnRegistration"),w(),{...p,...e}),ge=e=>C(v,P("CompleteWebAuthnRegistration"),w(),{...p,...e});async function Ee(){var c;const e=(c=A.getConfig().Auth)==null?void 0:c.Cognito;f(e);const{userPoolEndpoint:t,userPoolId:n}=e,{tokens:s}=await T();h(s);const r=le({endpointResolver:g({endpointOverride:t})}),{CredentialCreationOptions:o}=await r({region:u(n),userAgentValue:d(l.StartWebAuthnRegistration)},{AccessToken:s.accessToken.toString()});q(o);const a=await de(o);await ge({endpointResolver:g({endpointOverride:t})})({region:u(n),userAgentValue:d(l.CompleteWebAuthnRegistration)},{AccessToken:s.accessToken.toString(),Credential:a})}const Ae=e=>C(v,P("ListWebAuthnCredentials"),w(),{...p,...e});async function fe(e,t){var S;const n=(S=e.getConfig().Auth)==null?void 0:S.Cognito;f(n);const{userPoolEndpoint:s,userPoolId:r}=n,{tokens:o}=await e.Auth.fetchAuthSession();h(o);const a=Ae({endpointResolver:g({endpointOverride:s})}),{Credentials:i=[],NextToken:c}=await a({region:u(r),userAgentValue:d(l.ListWebAuthnCredentials)},{AccessToken:o.accessToken.toString(),MaxResults:t==null?void 0:t.pageSize,NextToken:t==null?void 0:t.nextToken});return{credentials:i.map(b=>({credentialId:b.CredentialId,friendlyCredentialName:b.FriendlyCredentialName,relyingPartyId:b.RelyingPartyId,authenticatorAttachment:b.AuthenticatorAttachment,authenticatorTransports:b.AuthenticatorTransports,createdAt:b.CreatedAt?new Date(b.CreatedAt*1e3):void 0})),nextToken:c}}async function me(e){return fe(A,e)}const he=e=>C(v,P("DeleteWebAuthnCredential"),w(),{...p,...e});async function Ce(e,t){var i;const n=(i=e.getConfig().Auth)==null?void 0:i.Cognito;f(n);const{userPoolEndpoint:s,userPoolId:r}=n,{tokens:o}=await e.Auth.fetchAuthSession();h(o),await he({endpointResolver:g({endpointOverride:s})})({region:u(r),userAgentValue:d(l.DeleteWebAuthnCredential)},{AccessToken:o.accessToken.toString(),CredentialId:t.credentialId})}async function Ie(e){return Ce(A,e)}export{I as AuthError,Ee as associateWebAuthnCredential,We as autoSignIn,Ve as confirmResetPassword,Oe as confirmSignIn,Ne as confirmSignUp,Ke as confirmUserAttribute,_e as decodeJWT,ye as deleteUser,Se as deleteUserAttributes,Ie as deleteWebAuthnCredential,T as fetchAuthSession,De as fetchDevices,ve as fetchMFAPreference,xe as fetchUserAttributes,Re as forgetDevice,ze as getCurrentUser,me as listWebAuthnCredentials,Ue as rememberDevice,Le as resendSignUpCode,Je as resetPassword,Be as sendUserAttributeVerificationCode,be as setUpTOTP,je as signIn,Ge as signInWithRedirect,B as signOut,He as signUp,Pe as updateMFAPreference,ke as updatePassword,we as updateUserAttribute,ee as updateUserAttributes,Te as verifyTOTPSetup};
